@book{bib:beck2000extreme,
  title =        {Extreme programming explained: embrace change},
  author =       {Beck, Kent},
  year =         {2000},
  publisher =    {Addison-Wesley Professional}
}

@book{bib:thomas2019pragmatic,
  title =        {The Pragmatic Programmer: your journey to mastery},
  author =       {Thomas, David and Hunt, Andrew},
  year =         {2019},
  publisher =    {Addison-Wesley Professional}
}

@article{bib:martin2000principles,
  title = 	 {Design Principles and Design Patterns},
  author =       {Martin, Robert Cecil},
  url =          {https://labs.cs.upt.ro/labs/ip2/html/lectures/2/res/Martin-PrinciplesAndPatterns.PDF},
  journal =      {Object Mentor},
  volume =       {1},
  number =       {34},
  pages =        {597},
  year =         {2000}
}

@misc{bib:north2022cupid,
  OPTkey = 	 {},
  author = 	 {Dan North},
  title = 	 {CUPID—for joyful coding},
  OPThowpublished = {},
  url =          {https://dannorth.net/cupid-for-joyful-coding/},
  month = 	 {02},
  year = 	 {2022},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@article{bib:hunt2004dry,
  title =        {Oo in one sentence: keep it dry, shy, and tell the other guy},
  author =       {Hunt, Andy and Thomas, Dave},
  url =          {https://cs.wlu.edu/~sprenkles/cs209/fall21/readings/dry_shy.pdf},
  journal =      {IEEE Software},
  volume =       {21},
  number =       {3},
  pages =        {101--103},
  year =         {2004},
  publisher =    {IEEE}
}

@article{bib:smith2012kiss,
  title =        {How to kiss: The art of keeping it simple, stupid},
  author =       {Smith, Byron},
  url =          {http://www.xdoubledot.com/documents/How%20to%20KISS.pdf},
  journal =      {X Double Dot, LLC},
  pages =        {1--6},
  year =         {2012}
}

@misc{bib:fowler2015yagni,
  OPTkey = 	 {},
  author = 	 {Fowler, Martin},
  title = 	 {Yagni},
  url =          {https://martinfowler.com/bliki/Yagni.html},
  OPThowpublished = {},
  month = 	 {02},
  year = 	 {2015},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@article{bib:fowler2001design,
  title =        {Is design dead?},
  author =       {Fowler, Martin},
  url =          {https://people.dsv.su.se/~beatrice/AGILE_and_IV1300/Lectures/Is%20Design%20Dead.pdf},
  journal =      {SOFTWARE DEVELOPMENT-SAN FRANCISCO-},
  volume =       {9},
  number =       {4},
  pages =        {42--47},
  year =         {2001}
}

@article{bib:mccall1977swquality,
  title =        {Factors in software quality. volume i. concepts and definitions of software quality},
  author =       {McCall, Jim A and Richards, Paul K and Walters, Gene F},
  url =          {https://apps.dtic.mil/sti/pdfs/ADA049014.pdf},
  journal =      {General Electric CO Sunnyvale CA},
  year =         {1977}
}

@article{bib:lee2014software,
  title =        {Software quality factors and software quality metrics to enhance software quality assurance},
  author =       {Lee, Ming-Chang},
  url =          {https://www.researchgate.net/profile/Ming-Chang-Lee-2/publication/263939913_Software_quality_factors_and_software_quality_metrics_to_enhance_software_quality_assurance_BJAST/data/00b4953c64d6e6be8b000000/Software-quality-factors-and-software-quality-metrics-to-enhance-software-quality-assurance-BJAST.pdf},
  journal =      {British Journal of Applied Science \& Technology},
  volume =       {4},
  number =       {21},
  pages =        {3069--3095},
  year =         {2014}
}

@book{bib:boehm2002software,
  title =        {Software engineering economics},
  author = {Boehm, Barry W},
  year = {2002},
  publisher = { Springer XS}
}

@misc{bib:martin2005ood,
  author = 	 {Martin, Robert Cecil},
  title = 	 {The Principles of {OOD}},
  url =          {http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod},
  OPThowpublished = {},
  month = 	 {05},
  year = 	 {2005},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@misc{bib:martin1996srp,
  OPTkey = 	 {},
  author = 	 {Martin, Robert Cecil},
  title = 	 {The Single Responsibility Principle},
  url =          {https://www.cs.utexas.edu/users/downing/papers/SRP-1996.pdf},
  OPThowpublished = {},
  month = 	 {01},
  year = 	 {1996},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@misc{bib:martin1996ocp,
  OPTkey = 	 {},
  author = 	 {Martin, Robert Cecil},
  title = 	 {The Open-Closed Principle},
  url =          {https://www.cs.utexas.edu/users/downing/papers/OCP-1996.pdf},
  OPThowpublished = {},
  month = 	 {01},
  year = 	 {1996},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@book{bib:demarco1979sysspec,
  author = 	 {DeMarco, Tom},
  ALTeditor = 	 {},
  title = 	 {Structured analysis and system specification},
  publisher = 	 {Englewood Cliffs, N.J. : Prentice-Hall},
  year = 	 {1979},
  url = 	 {https://archive.org/details/structuredanalys0000dema/page/n375/mode/2up},
  isbn =         {0138543801},
  OPTkey = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  OPTaddress = 	 {},
  OPTedition = 	 {},
  OPTmonth = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@book{bib:pagejones1988sysdesign,
  author = 	 {Page-Jones, Meilir},
  ALTeditor = 	 {},
  title = 	 {The practical guide to structured systems design},
  publisher = 	 {Englewood Cliffs, N.J. : Prentice Hall},
  year = 	 {1988},
  url = 	 {https://archive.org/details/practicalguideto0000page_e3j1/page/n9/mode/2up},
  isbn =         {0138543801},
  OPTkey = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  OPTaddress = 	 {},
  OPTedition = 	 {},
  OPTmonth = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InBook{bib:dijkstra1982,
  author = 	 {Dijkstra, Edsger W.},
  ALTeditor = 	 {},
  title = 	 {Selected Writings on Computing: A Personal Perspective},
  chapter = 	 {EWD447},
  publisher = 	 {Springer-Verlag},
  year = 	 {1982},
  url = 	 {https://www.cs.utexas.edu/users/EWD/ewd04xx/EWD447.PDF},
  isbn =         {0–387–90652–5},
  OPTkey = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  OPTtype = 	 {},
  OPTaddress = 	 {},
  OPTedition = 	 {},
  OPTmonth = 	 {},
  pages = 	 {60 -- 66},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:martin2014srp,
  OPTkey = 	 {},
  author = 	 {Martin, Robert Cecil},
  title = 	 {The Single Responsibility Principle},
  OPThowpublished = {},
  url = 	 {https://blog.cleancoder.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html},
  month = 	 {05},
  year = 	 {2014},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:martin2020solid,
  OPTkey = 	 {},
  OPTauthor = 	 {Martin, Robert Cecil},
  title = 	 {Solid Relevance},
  OPThowpublished = {},
  url = 	 {https://blog.cleancoder.com/uncle-bob/2020/10/18/Solid-Relevance.html},
  month = 	 {10},
  year = 	 {2020},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:marston2011solid,
  OPTkey = 	 {},
  OPTauthor = 	 {Tony Marston},
  title = 	 {Not-so-SOLID OO Principles},
  OPThowpublished = {},
  url = 	 {https://www.tonymarston.net/php-mysql/not-so-solid-oo-principles.html},
  month = 	 {06},
  year = 	 {2011},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:mckendrick2015amazon,
  OPTkey = 	 {},
  OPTauthor = 	 {Joe McKendrick},
  title = 	 {How Amazon handles a new software deployment every second},
  OPThowpublished = {},
  url = 	 {https://www.zdnet.com/article/how-amazon-handles-a-new-software-deployment-every-second/},
  month = 	 {03},
  year = 	 {2015},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:geihsler2014notsolid,
  OPTkey = 	 {},
  OPTauthor = 	 {Brian Geihsler},
  title = 	 {Quality Is Speed},
  OPThowpublished = {},
  url = 	 {https://qualityisspeed.blogspot.com/2014/08/why-i-dont-teach-solid.html},
  month = 	 {08},
  year = 	 {2014},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Book{bib:meyer1997object,
  title =        {Object-oriented software construction},
  author =       {Meyer, Bertrand},
  url = 	 {http://ndl.ethernet.edu.et/bitstream/123456789/29339/1/21.pdf},
  volume =       {2},
  year =         {1997},
  publisher =    {Prentice hall Englewood Cliffs}
}

@InBook{bib:martin1997acv,
  author =       {Martin, Robert Cecil},
  title =        {Acyclic visitor},
  year =         {1997},
  isbn =         {0201310112},
  doi =          {10.5555/273448.273456},
  url = 	 {https://condor.depaul.edu/dmumaugh/OOT/Design-Principles/acv.pdf},
  publisher =    {Addison-Wesley Longman Publishing Co., Inc.},
  address =      {USA},
  booktitle =    {Pattern Languages of Program Design 3},
  pages =        {93–103},
  numpages =     {11}
}

@Book{bib:gof1994design-patterns,
  title =        {Design Patterns: Elements of Reusable Object-Oriented Software},
  author =       {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John M.},
  edition =      1,
  url =          {https://github.com/ben-elbert/books/blob/master/Design%20Patterns%2C%20Elements%20of%20Reusable%20Object-Oriented%20Software.pdf},
  year =         {1994},
  ean =          {9780201633610},
  isbn =         {0201633612},
  asin =         {0201633612},
  publisher =    {Addison-Wesley Professional},
}

@article{bib:reynolds1994user,
  title =        {User-defined types and procedural data structures as complementary approaches to data abstraction},
  author =       {Reynolds, John C},
  journal =      {Theoretical Aspects of Object-Oriented Programming: Types, Semantics, and Language Design},
  pages =        {13--23},
  year =         {1994},
  publisher =    {MIT Press},
  url =          {https://kilthub.cmu.edu/articles/journal_contribution/User-defined_Types_and_Procedural_Data_Structures_as_Complementary_Approaches_to_Data_Abstraction/6611723/files/12104144.pdf}
}

@InProceedings{bib:cook1991object,
  author =       {Cook, William R.},
  editor =       {de Bakker, J. W. and de Roever, W. P.  and Rozenberg, G.},
  title =        {Object-oriented programming versus abstract data types},
  booktitle =    {Foundations of Object-Oriented Languages},
  year =         {1991},
  publisher =    {Springer Berlin Heidelberg},
  address =      {Berlin, Heidelberg},
  pages =        {151--178},
  abstract =     {This tutorial collects and elaborates arguments for distinguishing between object-oriented programming and abstract data types. The basic distinction is that object-oriented programming achieves data abstraction by the use of procedural abstraction, while abstract data types depend upon type abstraction. Object-oriented programming and abstract data types can also be viewed as complimentary implementation techniques: objects are centered around the constructors of a data abstraction, while abstract data types are organized around the operations. These differences have consequences relating to extensibility, efficiency, typing, and verification; in many cases the strengths of one paradigm are the weaknesses of the other. Most object-oriented programming languages support aspects of both techniques, not a unification of them, so an understanding of their relative merits is useful in designing programs.},
  doi =          {10.1007/BFb0019443},
  isbn =         {978-3-540-46450-1}
}

@article{bib:wadler1998expression,
  title =        {The expression problem},
  author =       {Wadler, Philip and others},
  journal =      {Posted on the Java Genericity mailing list},
  volume =       {7},
  year =         {1998}
}

@InProceedings{bib:mads2004expr-problem,
  author =       {Torgersen, Mads},
  editor =       {Odersky, Martin},
  title =        {The Expression Problem Revisited},
  booktitle =    {ECOOP 2004 -- Object-Oriented Programming},
  year =         {2004},
  publisher =    {Springer Berlin Heidelberg},
  address =      {Berlin, Heidelberg},
  pages =        {123--146},
  doi =          {10.1007/978-3-540-24851-4_6},
  url =          {https://www.researchgate.net/publication/221496613_The_Expression_Problem_Revisited?enrichId=rgreq-91ab2e09a1842ab761234367c0490522-XXX&enrichSource=Y292ZXJQYWdlOzIyMTQ5NjYxMztBUzoyMTEzMDUwMzUyNDM1MzFAMTQyNzM5MDQ1NDgwMA%3D%3D&el=1_x_2&_esc=publicationCoverPdf},
  abstract =     {The expression problem (aka the extensibility problem) refers to a fundamental dilemma of programming: To which degree can your application be structured in such a way that both the data model and the set of virtual operations over it can be extended without the need to modify existing code, without the need for code repetition and without runtime type errors.},
  isbn =         {978-3-540-24851-4}
}

@InProceedings{bib:wang2016expression,
  title =        {The expression problem, trivially!},
  author =       {Wang, Yanlin and Oliveira, Bruno C d S},
  booktitle =    {Proceedings of the 15th International Conference on Modularity},
  pages =        {37--41},
  year =         {2016},
  url =          {https://i.cs.hku.hk/~bruno/papers/Modularity2016.pdf}
}

