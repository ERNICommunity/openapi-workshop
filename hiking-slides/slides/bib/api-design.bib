@Article{bib:hoare:null,
  title =         {Null references: The billion dollar mistake},
  author =        {Hoare, Tony},
  journal =       {Presentation at QCon London},
  volume =        {298},
  pages =         {88},
  url =           {https://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare/},
  year =          {2009}
}

@Misc{bib:cockburn:hexagonal,
  OPTkey = 	 {},
  author = 	 {Cockburn, Alistair},
  title = 	 {The Pattern: Ports and Adapters ("Object Structural")},
  OPThowpublished = {},
  OPTmonth = 	 {},
  OPTyear = 	 {},
  url =          {https://alistair.cockburn.us/hexagonal-architecture/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:graca:hexagonal,
  OPTkey = 	 {},
  author = 	 {Graca, Herberto},
  title = 	 {Ports & Adapters Architecture},
  OPThowpublished = {},
  OPTmonth = 	 {09},
  year = 	 {2017},
  url =          {https://herbertograca.com/tag/hexagonal-architecture/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@TechReport{bib:oai:openapi,
  author = 	 {Darrel Miller, Jeremy Whitlock, Marsh Gardiner, Mike Ralphson, Ron Ratovsky, Uri Sarid},
  title = 	 {OpenAPI Specification},
  institution =  {OpenAPI Initiative (OAI)},
  year = 	 {2020},
  OPTkey = 	 {},
  OPTtype = 	 {},
  number = 	 {v3.0.3},
  OPTaddress = 	 {},
  month = 	 {02},
  url =          {https://spec.openapis.org/oas/v3.0.3.html},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@TechReport{bib:wright:json-schema-00,
  number =       {draft-wright-json-schema-00},
  type =         {Internet-Draft},
  institution =  {Internet Engineering Task Force},
  publisher =    {Internet Engineering Task Force},
  note =         {Work in Progress},
  url =          {https://datatracker.ietf.org/doc/draft-wright-json-schema/00/},
  author =       {Austin Wright},
  title =        {{JSON Schema: A Media Type for Describing JSON Documents}},
  pagetotal =    16,
  year =         2016,
  month =        oct,
  day =          13,
  abstract =     {JSON Schema defines the media type "application/schema+json", a JSON based format for describing the structure of JSON data. JSON Schema asserts what a JSON document must look like, ways to extract information from it, and how to interact with it, ideal for annotating existing JSON APIs that would not otherwise have hypermedia controls or be machine-readable.},
}

@TechReport{bib:redocly:cli,
  author = 	 {Redocly Team},
  title = 	 {Redocly CLI},
  institution =  {2024 Redocly Inc.},
  year = 	 {},
  OPTkey = 	 {},
  OPTtype = 	 {},
  OPTnumber = 	 {},
  OPTaddress = 	 {},
  OPTmonth = 	 {},
  url =          {https://redocly.com/docs/cli},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@TechReport{bib:smartbear:spectral,
  author = 	 {Stoplight Team},
  title = 	 {Spectral -- JSON/YAML Linter with Custom Rulesets},
  institution =  {SmartBear Software},
  year = 	 {},
  OPTkey = 	 {},
  OPTtype = 	 {},
  OPTnumber = 	 {},
  OPTaddress = 	 {},
  OPTmonth = 	 {},
  url =          {https://docs.stoplight.io/docs/spectral/674b27b261c3c-overview},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:lane:api-first,
  OPTkey = 	 {},
  author = 	 {Kin Lane},
  title = 	 {What Is API First?},
  howpublished = {{W}orld {W}ide {W}eb},
  month = 	 {2020},
  year = 	 {03},
  url =          {https://apievangelist.com/2020/03/09/what-is-api-first/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:postman:api-first,
  OPTkey = 	 {},
  author = 	 {Postman Team},
  title = 	 {Guide to API-first},
  howpublished = {{W}orld {W}ide {W}eb},
  OPTmonth = 	 {},
  OPTyear = 	 {},
  url =          {https://www.postman.com/api-first/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:rivieres:api-first,
  OPTkey = 	 {},
  author = 	 {Jim des Rivi√®res},
  title = 	 {API First},
  OPThowpublished = {},
  month = 	 {02},
  year = 	 {2005},
  url =          {https://git.eclipse.org/c/www.eclipse.org/eclipse.git/plain/development/apis/API-First.pdf},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:loadmill:test-generator,
  OPTkey = 	 {},
  author = 	 {Loadmill},
  title = 	 {Generate API Tests In Seconds with AI},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://www.loadmill.com/test-composer/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:postman:contract-test-generator,
  OPTkey = 	 {},
  author = 	 {Jordan Walsh},
  title = 	 {Contract Test Generator},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://www.postman.com/postman/contract-test-generator/overview},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:smartbear:ready-api,
  OPTkey = 	 {},
  author = 	 {Smartbear},
  title = 	 {ReadyAPI},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2023},
  url =          {https://smartbear.com/product/ready-api/},
  OPTnote = 	 {},
  OPTannote = 	 {},
  abstract =     {ReadyAPI is a low-code API testing platform for development teams that care about creating test automation across any workflow.}
}

@Misc{bib:openapi-generator,
  OPTkey = 	 {},
  author = 	 {OpenAPI Generator Core Team},
  title = 	 {OpenAPI Generator},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://openapi-generator.tech/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Article{bib:brucker:theorem,
  title =        {On theorem prover-based testing},
  author =       {Brucker, Achim D and Wolff, Burkhart},
  journal =      {Formal Aspects of Computing},
  volume =       {25},
  number =       {5},
  pages =        {683--721},
  year =         {2013},
  url =          {https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=724393540891843994a19e55d74dd7931539b994},
  publisher =    {Springer}
}

@Article{bib:godefroid:model-checking,
  title =        {Combining model checking and testing},
  author =       {Godefroid, Patrice and Sen, Koushik},
  journal =      {Handbook of Model Checking},
  pages =        {613--649},
  year =         {2018},
  url =          {https://patricegodefroid.github.io/public_psfiles/mchandbook2018.pdf},
  publisher =    {Springer}
}

@Misc{bib:mustache,
  OPTkey = 	 {},
  author = 	 {Mustache contributors},
  title = 	 {Mustache -- Logic-less templates},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://mustache.github.io/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:42crunch:api-scan,
  OPTkey = 	 {},
  author = 	 {42Crunch Security Systems Ltd.},
  title = 	 {API Scan},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://42crunch.com/api-conformance-scan/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:42crunch:additional-properties,
  OPTkey = 	 {},
  author = 	 {42Crunch Security Systems Ltd.},
  title = 	 {Schema in a request allows additional properties},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2019},
  url =          {https://docs.42crunch.com/latest/content/oasv3/datavalidation/schema/v3-schema-request-object-additionalproperties-true.htm#:~:text=If%20the%20schema%20does%20not%20use%20allOf,%20anyOf,},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@TechReport{bib:owasp:api-top-ten,
  author = 	 {OWASP API Security Project},
  title = 	 {OWASP API Security Top Ten},
  institution =  {OWASP},
  year = 	 {2023},
  OPTkey = 	 {},
  OPTtype = 	 {},
  OPTnumber = 	 {},
  OPTaddress = 	 {},
  OPTmonth = 	 {},
  url =          {https://owasp.org/API-Security/editions/2023/en/0x00-header/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:stackhawk:api-security,
  OPTkey = 	 {},
  author = 	 {StackHawk},
  title = 	 {Web API Security: Essential Strategies and Best Practices},
  OPThowpublished = {},
  month = 	 {09},
  year = 	 {2024},
  url =          {https://www.stackhawk.com/blog/web-api-security-essential-strategies-and-best-practices/#:~:text=Proper%20API%20security%20involves},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:openapi4j:validator,
  OPTkey = 	 {},
  author = 	 {OpenApi4J Contributors},
  title = 	 {OpenApi4J -- Schema validator},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2021},
  url =          {https://www.openapi4j.org/schema-validator.html},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:jqwik,
  OPTkey = 	 {},
  author = 	 {jqwik Team},
  title = 	 {jqwik -- Property-Based Testing in Java (v1.9.0)},
  OPThowpublished = {},
  month = 	 {06},
  year = 	 {2024},
  url =          {https://jqwik.net/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@InProceedings{bib:hughes:specify,
  author =       "Hughes, John",
  editor =       "Bowman, William J. and Garcia, Ronald",
  title =        "How to Specify It!",
  booktitle =    "Trends in Functional Programming",
  year =         "2020",
  publisher =    "Springer International Publishing",
  address =      "Cham",
  pages =        "58--83",
  abstract =     "Property-based testing tools test software against a specification, rather than a set of examples. This tutorial paper presents five generic approaches to writing such specifications (for purely functional code). We discuss the cost, benefits, and bug-finding power of each approach, with reference to a simple example with eight buggy variants. The lessons learned should help the reader to develop effective property-based tests in the future.",
  isbn =         "978-3-030-47147-7",
  url =          "https://www.dropbox.com/s/tx2b84kae4bw1p4/paper.pdf"
}

@Misc{bib:pbt:java,
  OPTkey = 	 {},
  author = 	 {jqwik Team},
  title = 	 {How to Specify it! In Java!},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2019},
  url =          {https://johanneslink.net/how-to-specify-it/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:pbt:python,
  OPTkey = 	 {},
  author = 	 {Hypothesis Team},
  title = 	 {Hypothesis -- Test faster, fix more},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://hypothesis.works/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:pbt:patterns,
  OPTkey = 	 {},
  author = 	 {Sanjiv Sahayam},
  title = 	 {Property-based Testing Patterns},
  OPThowpublished = {},
  month = 	 {06},
  year = 	 {2016},
  url =          {https://blog.ssanj.net/posts/2016-06-26-property-based-testing-patterns.html},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:baeldung:openapi-custom,
  OPTkey = 	 {},
  author = 	 {Philippe Sevestre},
  title = 	 {OpenAPI Generator Custom Templates},
  OPThowpublished = {},
  month = 	 {07},
  year = 	 {2024},
  url =          {https://www.baeldung.com/spring-boot-openapi-generator-custom-templates},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:eros:openapi-validator,
  OPTkey = 	 {},
  author = 	 {Bence Er≈ës},
  title = 	 {Contract-First Development Using RestAssured and OpenAPI},
  OPThowpublished = {},
  month = 	 {03},
  year = 	 {2021},
  url =          {https://hazelcast.com/blog/contract-first-development-using-restassured-and-openapi/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:pfeifer:jqwik,
  OPTkey = 	 {},
  author = 	 {Patrick Pfeifer and Armin H√§berling},
  title = 	 {Property based testing with jqwik},
  OPThowpublished = {},
  OPTmonth = 	 {06},
  year = 	 {2024},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:openapi:nullable,
  OPTkey = 	 {},
  author = 	 {Ted Epstein},
  title = 	 {Clarify Semantics of nullable in OpenAPI 3.0},
  OPThowpublished = {},
  month = 	 {10},
  year = 	 {2019},
  url =          {https://github.com/OAI/OpenAPI-Specification/blob/main/proposals/2019-10-31-Clarify-Nullable.md},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:openapi:sonar,
  OPTkey = 	 {},
  author = 	 {Enrique Gomez and Adrian Palanques},
  title = 	 {Sonar OpenApi (plugin)},
  OPThowpublished = {},
  month = 	 {09},
  year = 	 {2024},
  url =          {https://github.com/apiaddicts/sonar-openapi/tree/main},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:salt:state-api-report,
  OPTkey = 	 {},
  author = 	 {Salt Security, Inc.},
  title = 	 {2024 State of API Security},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://content.salt.security/state-api-report},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:fielding:rest-ht-driven,
  OPTkey = 	 {},
  author =       {Fielding, Roy Thomas},
  title = 	 {REST APIs must be hypertext-driven},
  OPThowpublished = {},
  month = 	 {10},
  year = 	 {2008},
  url =          {https://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:fowler:rmm,
  OPTkey = 	 {},
  author = 	 {Martin Fowler},
  title = 	 {Richardson Maturity Model},
  OPThowpublished = {},
  month = 	 {03},
  year = 	 {2010},
  url =          {https://martinfowler.com/articles/richardsonMaturityModel.html},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:sturgeon:oas-json,
  OPTkey = 	 {},
  author = 	 {Sturgeon, Phil},
  title = 	 {The OpenAPI and JSON Schema Divergence Problem},
  OPThowpublished = {},
  month = 	 {03},
  year = 	 {2018},
  url =          {https://apisyouwonthate.com/blog/openapi-json-schema-divergence/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:zuplo:rate-oas,
  OPTkey = 	 {},
  author = 	 {Zuplo},
  title = 	 {Rate my OpenApi},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://ratemyopenapi.com/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:openapi:tools,
  OPTkey = 	 {},
  author = 	 {APIs You Won't Hate},
  title = 	 {OpenAPI.Tools},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://openapi.tools/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:openapi:tcases,
  OPTkey = 	 {},
  author = 	 {Cornutum Project},
  title = 	 {Tcases: The Complete Guide},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://www.cornutum.org/tcases/docs/Tcases-Guide.htm},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:membrane,
  OPTkey = 	 {},
  author = 	 {predic8 GmbH},
  title = 	 {Membrane API Gateway},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2020},
  url =          {https://www.membrane-soa.org/},
  note = 	 {additional documentation: https://www.membrane-api.io/},
  OPTannote = 	 {}
}

@Article{bib:openapi:deeprest,
  title =        {DeepREST: Automated Test Case Generation for REST APIs Exploiting Deep Reinforcement Learning},
  author =       {Corradini, Davide and Montolli, Zeno and Pasqua, Michele and Ceccato, Mariano},
  journal =      {arXiv preprint arXiv:2408.08594},
  url =          {https://arxiv.org/pdf/2408.08594},
  year =         {2024}
}

@Article{bib:openapi:security-testing,
  title =        {Security Testing of Web APIs},
  author =       {Teixeira, Gon{\c{c}}alo Andr{\'e} Carneiro},
  url =          {https://repositorio-aberto.up.pt/bitstream/10216/153235/2/645851.1.pdf},
  year =         {2023}
}

@Misc{bib:openapi:schemathesis,
  title =        {Deriving Semantics-Aware Fuzzers from Web API Schemas}, 
  author =       {Zac Hatfield-Dodds and Dmitry Dygalo},
  year =         {2021},
  eprint =       {2112.10328},
  archivePrefix= {arXiv},
  primaryClass = {cs.CR},
  url =          {https://arxiv.org/abs/2112.10328}, 
}

@book{bib:verification:model-checking,
  author =       {Berard, B. and Bidoit, M. and Finkel, A. and Laroussinie, F. and Petit, A. and Petrucci, L. and Schnoebelen, P.},
  title =        {Systems and Software Verification: Model-Checking Techniques and Tools},
  year =         {2010},
  isbn =         {3642074782},
  publisher =    {Springer Publishing Company, Incorporated},
  edition =      {1st},
  url =          {https://dl.acm.org/doi/10.5555/1965314},
  abstract =     {Model checking is a powerful approach for the formal verification of software. It automatically provides complete proofs of correctness, or explains, via counter-examples, why a system is not correct. Here, the author provides a well written and basic introduction to the new technique. The first part describes in simple terms the theoretical basis of model checking: transition systems as a formal model of systems, temporal logic as a formal language for behavioral properties, and model-checking algorithms. The second part explains how to write rich and structured temporal logic specifications in practice, while the third part surveys some of the major model checkers available.}
}
@Misc{bib:fowler:consumer-driven,
  OPTkey = 	 {},
  author = 	 {Martin Fowler},
  title = 	 {Consumer-Driven Contracts: A Service Evolution Pattern},
  OPThowpublished = {},
  month = 	 {06},
  year = 	 {2006},
  url =          {https://martinfowler.com/articles/consumerDrivenContracts.html},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:pact:specification,
  OPTkey = 	 {},
  author = 	 {Pact Project},
  title = 	 {PACT},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2023},
  url =          {https://github.com/pact-foundation/pact-specification},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:fellows:contract-testing,
  OPTkey = 	 {},
  author = 	 {Matt Fellows},
  title = 	 {What is contract testing and why should I try it?},
  OPThowpublished = {},
  month = 	 {09},
  year = 	 {2023},
  url =          {https://pactflow.io/blog/what-is-contract-testing/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:fowler:contract-test,
  OPTkey = 	 {},
  author = 	 {Martin Fowler},
  title = 	 {Contract Test},
  OPThowpublished = {},
  month = 	 {01},
  year = 	 {2011},
  url =          {https://martinfowler.com/bliki/ContractTest.html},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:springboot:cloud-contract,
  OPTkey = 	 {},
  author = 	 {Spring Cloud Contract Project},
  title = 	 {Spring Cloud Contract},
  OPThowpublished = {},
  OPTmonth = 	 {},
  year = 	 {2024},
  url =          {https://spring.io/projects/spring-cloud-contract},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@Misc{bib:zalando:restful-guidelines,
  OPTkey = 	 {},
  author = 	 {Zalando API Guild},
  title = 	 {Zalando RESTful API and Event Guidelines -- v1.1.0},
  OPThowpublished = {},
  month = 	 {08},
  year = 	 {2017},
  url =          {https://opensource.zalando.com/restful-api-guidelines/},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

