openapi: 3.0.3
info:
  title: Hiking API
  description: |-
  termsOfService: https://localhost/termsOfService
  contact:
    email: admin@example.com
  license:
    name: PUBLIC DOMAIN
    url: https://example.com/licenses/LICENSE-2.0.html
  version: "1.0"
externalDocs:
  description: n/a
  url: https://localhost
servers:
  - url: https://localhost
tags:
  - name: Hiking
    x-displayName: Hiking Operations
    description: Operations to retrieve hiking routes.
  - name: hiking-types
    x-displayName: Hiking Schemas
    description: Schemas belonging to retrieval of hiking routes.
x-tagGroups:
  - name: resources
    x-displayName: Operations by resource
    tags:
      - Hiking
  - name: models
    x-displayName: Models by category
    tags:
      - hiking-types
paths:
  /api/routes/{id}:
    get:
      tags:
        - Hiking
      summary: "Retrieve route by id."
      description: "Retrieve route by path parameter id."
      operationId: getRoutes
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          $ref: '#/components/responses/RouteResponse'
components:
  responses:
    RouteResponse:
      x-tags:
        - hiking-types
      description: "Response type for a route."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Route'
  schemas:
    Route:
      title: Route
      description: "A route for hiking (may include mountain ride segments)."
      type: object
      properties:
        name:
          description: "The name of the route."
          type: string
          minLength: 1
          maxLength: 255
        routeSegments:
          description: "The hiking and mountain ride segments for this route."
          type: array
          items:
            $ref: '#/components/schemas/RouteSegment'
          uniqueItems: false
          minItems: 1
          maxItems: 99
          x-jqwik-max-items: 9
        mostDifficultRouteSegment:
          $ref: '#/components/schemas/RouteSegment'
      required:
        - name
        - routeSegments
      additionalProperties: false
    RouteSegment:
      title: RouteSegment
      description: "A route segment is either a hiking or a mountain ride segment."
      type: object
      discriminator:
        propertyName: discriminator
        mapping:
          HIKING_SEGMENT: '#/components/schemas/HikingSegment'
          MOUNTAIN_RIDE_SEGMENT: '#/components/schemas/MountainRideSegment'
      properties:
        discriminator:
          description: "Distinguishes between hiking and mountain ride segments."
          type: string
          enum:
            - HIKING_SEGMENT
            - MOUNTAIN_RIDE_SEGMENT
          readOnly: true
        from:
          description: "Starting point where the route segment begins."
          type: string
          minLength: 1
          maxLength: 255
        to:
          description: "End point of the route segment."
          type: string
          minLength: 1
          maxLength: 255
        duration:
          description: "Estimated duration in minutes the segment requires to take."
          type: integer
          minimum: 0
          maximum: 1440 # 1 day
      required:
        - discriminator
        - from
        - to
    HikingSegment:
      title: HikingSegment
      description: "A hiking segment as part of a route."
      type: object
      allOf:
        - $ref: '#/components/schemas/RouteSegment'
        - $ref: '#/components/schemas/HikingSegmentDetails'
    MountainRideSegment:
      title: MountainRideSegment
      description: "A mountain ride segment as part of a route."
      type: object
      allOf:
        - $ref: '#/components/schemas/RouteSegment'
        - $ref: '#/components/schemas/MountainRideSegmentDetails'
    HikingSegmentDetails:
      title: HikingSegmentDetails
      description: "Details specific to a hiking segment of a route."
      type: object
      properties:
        length:
          description: "The distance in meter to hike."
          type: integer
          minimum: 0
          maximum: 10000 # 10 km
        difficulty:
          description: "Estimation how difficult this segment is to take."
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
          # further properties here
      required:
        - length
    MountainRideSegmentDetails:
      title: MountainRideSegmentDetails
      description: "Details specific to a mountain ride segment of a route."
      type: object
      properties:
        costs:
          description: "The costs for the mountain ride in cents."
          type: integer
          minimum: 10000
          maximum: 0
          # further properties here
      required:
        - costs
